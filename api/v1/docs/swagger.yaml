basePath: /api/v1
definitions:
  models.Banner:
    properties:
      created_at:
        example: "2020-04-21T00:00:00Z"
        type: string
      id:
        type: integer
      text:
        type: string
      updated_at:
        example: "2020-04-21T00:00:00Z"
        type: string
    type: object
  models.Event:
    properties:
      created_at:
        example: "2020-04-21T00:00:00Z"
        type: string
      id:
        type: integer
      image_url:
        type: string
      registration_url:
        type: string
      scheduled_end:
        example: "2020-04-21T00:00:00Z"
        type: string
      scheduled_start:
        example: "2020-04-21T00:00:00Z"
        type: string
      title:
        type: string
      updated_at:
        example: "2020-04-21T00:00:00Z"
        type: string
      youtube_id:
        type: string
    type: object
  models.Organization:
    properties:
      created_at:
        example: "2020-04-21T00:00:00Z"
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      updated_at:
        example: "2020-04-21T00:00:00Z"
        type: string
    type: object
  models.Startup:
    properties:
      created_at:
        example: "2020-04-21T00:00:00Z"
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      one_liner:
        type: string
      slug:
        type: string
      updated_at:
        example: "2020-04-21T00:00:00Z"
        type: string
      website:
        type: string
    type: object
info:
  contact:
    email: support@palembangdigital.org
    name: Palembang Digital
    url: https://palembangdigital.org
  description: API documentation for palembangdigital.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Palembang Digital API
  version: 1.0.0
paths:
  /banners:
    get:
      description: Get the list of banners
      operationId: list-banners
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Banner'
            type: array
      summary: List banners
      tags:
      - banners
    post:
      description: Create a new banner
      operationId: create-banner
      parameters:
      - description: Create banner
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/models.Banner'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Banner'
      summary: Create a new banner
      tags:
      - banners
  /banners/{id}:
    delete:
      description: Delete an banner by id
      operationId: delete-banner
      parameters:
      - description: Banner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Delete an banner
      tags:
      - banners
    get:
      description: Get an banner by id
      operationId: get-banner
      parameters:
      - description: Banner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Banner'
      summary: Get an banner
      tags:
      - banners
  /events:
    get:
      description: Get the list of events
      operationId: list-events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
      summary: List events
      tags:
      - events
    post:
      description: Create a new event
      operationId: create-event
      parameters:
      - description: Create event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Event'
      summary: Create a new event
      tags:
      - events
  /events/{id}:
    delete:
      description: Delete an event by id
      operationId: delete-event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Delete an event
      tags:
      - events
    get:
      description: Get an event by id
      operationId: get-event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
      summary: Get an event
      tags:
      - events
  /organizations:
    get:
      description: Get the list of organizations
      operationId: list-organizations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
      summary: List organizations
      tags:
      - organizations
    post:
      description: Create a new organization
      operationId: create-organization
      parameters:
      - description: Create organization
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/models.Organization'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Organization'
      summary: Create a new organization
      tags:
      - organizations
  /organizations/{id}:
    delete:
      description: Delete an organization by id
      operationId: delete-organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Delete an organization
      tags:
      - organizations
    get:
      description: Get an organization by id
      operationId: get-organization
      parameters:
      - description: Organization ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
      summary: Get an organization
      tags:
      - organizations
  /startups:
    get:
      description: Get the list of startups
      operationId: list-startups
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Startup'
            type: array
      summary: List startups
      tags:
      - startups
    post:
      description: Create a new startup
      operationId: create-startup
      parameters:
      - description: Create startup
        in: body
        name: startup
        required: true
        schema:
          $ref: '#/definitions/models.Startup'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Startup'
      summary: Create a new startup
      tags:
      - startups
  /startups/{id}:
    delete:
      description: Delete an startup by id
      operationId: delete-startup
      parameters:
      - description: Startup ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "204":
          description: No Content
          schema:
            type: string
      summary: Delete an startup
      tags:
      - startups
  /startups/{slug}:
    get:
      description: Get an startup by slug
      operationId: get-startup-by-slug
      parameters:
      - description: Startup slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Startup'
      summary: Get an startup by slug
      tags:
      - startups
swagger: "2.0"
