// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Palembang Digital",
            "url": "https://palembangdigital.org",
            "email": "support@palembangdigital.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/banners": {
            "get": {
                "description": "Get the list of banners",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "List banners",
                "operationId": "list-banners",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Banner"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new banner",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Create a new banner",
                "operationId": "create-banner",
                "parameters": [
                    {
                        "description": "Create banner",
                        "name": "banner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Banner"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Banner"
                        }
                    }
                }
            }
        },
        "/banners/{id}": {
            "get": {
                "description": "Get an banner by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Get an banner",
                "operationId": "get-banner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Banner"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an banner by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Delete an banner",
                "operationId": "delete-banner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "description": "Get the list of events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List events",
                "operationId": "list-events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Event"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create a new event",
                "operationId": "create-event",
                "parameters": [
                    {
                        "description": "Create event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Get an event by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get an event",
                "operationId": "get-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Update an event",
                "operationId": "update-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Event"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an event by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Delete an event",
                "operationId": "delete-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "description": "Get the list of organizations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "List organizations",
                "operationId": "list-organizations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Organization"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new organization",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Create a new organization",
                "operationId": "create-organization",
                "parameters": [
                    {
                        "description": "Create organization",
                        "name": "organization",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    }
                }
            }
        },
        "/organizations/{id}": {
            "get": {
                "description": "Get an organization by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Get an organization",
                "operationId": "get-organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Organization"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an organization by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "organizations"
                ],
                "summary": "Delete an organization",
                "operationId": "delete-organization",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Organization ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/startups": {
            "get": {
                "description": "Get the list of startups",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "startups"
                ],
                "summary": "List startups",
                "operationId": "list-startups",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Startup"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new startup",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "startups"
                ],
                "summary": "Create a new startup",
                "operationId": "create-startup",
                "parameters": [
                    {
                        "description": "Create startup",
                        "name": "startup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Startup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.Startup"
                        }
                    }
                }
            }
        },
        "/startups/{id}": {
            "delete": {
                "description": "Delete an startup by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "startups"
                ],
                "summary": "Delete an startup",
                "operationId": "delete-startup",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Startup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/startups/{slug}": {
            "get": {
                "description": "Get an startup by slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "startups"
                ],
                "summary": "Get an startup by slug",
                "operationId": "get-startup-by-slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Startup slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Startup"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Create a new user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "Create user",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            }
        },
        "/users/{uid}": {
            "get": {
                "description": "Get an user by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get an user",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an user by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete an user",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Banner": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Event": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "registration_fee": {
                    "type": "integer"
                },
                "registration_url": {
                    "type": "string"
                },
                "scheduled_end": {
                    "type": "string"
                },
                "scheduled_start": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "youtube_id": {
                    "type": "string"
                }
            }
        },
        "db.Organization": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Startup": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "one_liner": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "db.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "find_job_profession": {
                    "type": "string"
                },
                "information_source": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "job_profession": {
                    "type": "string"
                },
                "motivation": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "residence": {
                    "type": "string"
                },
                "school_major": {
                    "type": "string"
                },
                "school_name": {
                    "type": "string"
                },
                "school_semester": {
                    "type": "integer"
                },
                "telegram_number": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "whatsapp_number": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Palembang Digital API",
	Description: "API documentation for palembangdigital.org",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
